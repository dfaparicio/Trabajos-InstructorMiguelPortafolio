import { GoogleGenerativeAI } from "https://esm.run/@google/generative-ai";

// Configurar la API key y el modelo
const API_KEY = "AIzaSyBBAEYltiVyWscwACtzAbqZCysBH1lSxs0";
const genAI = new GoogleGenerativeAI(API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash" });

// Elementos del DOM
const chatForm = document.getElementById('chat-form');
const userInput = document.getElementById('user-input');
const chatMessages = document.getElementById('chat-messages');
const clearButton = document.getElementById('clear-chat');

// Funci√≥n para consultar Gemini
async function consultarGemini(prompt) {
    try {
        const result = await model.generateContent(prompt);
        const response = await result.response;
        return response.text();
    } catch (error) {
        console.error('Error al consultar Gemini:', error);
        return '‚ö†Ô∏è Lo siento, hubo un error al procesar tu solicitud.';
    }
}

// Funci√≥n para agregar mensajes al chat
function agregarMensaje(texto, esUsuario = false) {
    const messageDiv = document.createElement('div');
    messageDiv.className = esUsuario ? 'message user-message' : 'message ai-message';
    messageDiv.textContent = texto;
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// Manejar el env√≠o del formulario
chatForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const pregunta = userInput.value.trim();
    if (!pregunta) return;
    
    // Agregar mensaje del usuario
    agregarMensaje(pregunta, true);
    userInput.value = '';
    
    // Deshabilitar el formulario mientras se procesa
    const submitButton = chatForm.querySelector('button');
    submitButton.disabled = true;
    
    try {
        // Obtener respuesta de Gemini
        const respuesta = await consultarGemini(pregunta);
        agregarMensaje(respuesta, false);
    } catch (error) {
        agregarMensaje('‚ùå Error de conexi√≥n con Gemini', false);
    } finally {
        // Rehabilitar el formulario
        submitButton.disabled = false;
        userInput.focus();
    }
});

// Limpiar el chat
clearButton.addEventListener('click', () => {
    chatMessages.innerHTML = '';
    agregarMensaje('¬°Hola! Soy Gemini, tu asistente de IA. ¬øEn qu√© puedo ayudarte hoy?', false);
});

// Focus autom√°tico en el input
userInput.focus();

// Enviar con Enter (sin Shift)
userInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault();
        chatForm.dispatchEvent(new Event('submit'));
    }
});


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
}

.chat-container {
    width: 100%;
    max-width: 800px;
    height: 600px;
    background: white;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.chat-header {
    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    color: white;
    padding: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.chat-header h1 {
    font-size: 1.5rem;
    font-weight: 600;
}

.btn-clear {
    background: rgba(255, 255, 255, 0.2);
    border: none;
    padding: 8px 15px;
    border-radius: 20px;
    color: white;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background 0.3s;
}

.btn-clear:hover {
    background: rgba(255, 255, 255, 0.3);
}

.chat-messages {
    flex: 1;
    padding: 20px;
    overflow-y: auto;
    background: #f8f9fa;
}

.message {
    margin-bottom: 15px;
    padding: 12px 18px;
    border-radius: 18px;
    max-width: 70%;
    word-wrap: break-word;
    animation: fadeIn 0.3s ease-in;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.user-message {
    background: #007bff;
    color: white;
    margin-left: auto;
    border-bottom-right-radius: 5px;
}

.ai-message {
    background: white;
    color: #333;
    border: 1px solid #e0e0e0;
    margin-right: auto;
    border-bottom-left-radius: 5px;
}

.chat-input {
    padding: 20px;
    background: white;
    border-top: 1px solid #e0e0e0;
}

#chat-form {
    display: flex;
    gap: 10px;
}

#user-input {
    flex: 1;
    padding: 12px 15px;
    border: 2px solid #e0e0e0;
    border-radius: 25px;
    font-size: 1rem;
    outline: none;
    transition: border-color 0.3s;
}

#user-input:focus {
    border-color: #007bff;
}

#chat-form button {
    padding: 12px 20px;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: background 0.3s;
}

#chat-form button:hover {
    background: #0056b3;
}

#chat-form button:disabled {
    background: #ccc;
    cursor: not-allowed;
}

/* Scrollbar personalizado */
.chat-messages::-webkit-scrollbar {
    width: 6px;
}

.chat-messages::-webkit-scrollbar-track {
    background: #f1f1f1;
}

.chat-messages::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 3px;
}

.chat-messages::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat con Gemini AI</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <h1>ü§ñ Chat con Gemini</h1>
            <button id="clear-chat" class="btn-clear">üóëÔ∏è Limpiar</button>
        </div>
        
        <div id="chat-messages" class="chat-messages">
            <div class="message ai-message">
                ¬°Hola! Soy Gemini, tu asistente de IA. ¬øEn qu√© puedo ayudarte hoy?
            </div>
        </div>
        
        <div class="chat-input">
            <form id="chat-form">
                <input 
                    type="text" 
                    id="user-input" 
                    placeholder="Escribe tu mensaje aqu√≠..." 
                    autocomplete="off"
                >
                <button type="submit">‚û§ Enviar</button>
            </form>
        </div>
    </div>

    <script type="module" src="script.js"></script>
</body>
</html>